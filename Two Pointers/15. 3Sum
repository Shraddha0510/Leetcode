class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        Arrays.sort(nums);
        List<List<Integer>> result=new ArrayList<>();
        for(int i=0;i<nums.length-2;i++)
        {
            if((i>0)&&(nums[i]==nums[i-1]))
                continue;
            int target=nums[i];
            findPair(nums,i+1,-target,result);
        }
        return result;
    }
    public void findPair(int [] nums, int first,int target, List<List<Integer>>result)
    {
        int start=first;
        int end=nums.length-1;
        while(start<end)
        {
            if(nums[start]+nums[end]==target)
            {
                List<Integer> temp=new ArrayList<>();
                temp.add(-target);
                temp.add(nums[start]);
                temp.add(nums[end]);
                result.add(temp);
                start++;
                end--;
                while((start<end)&&(nums[start]==nums[start-1]))
                    start++;
                while((start<end)&&(nums[end]==nums[end+1]))
                    end--;
                
            }
            else if(nums[start]+nums[end]>target)
                end--;
            else
                start++;
        }
    }
}
